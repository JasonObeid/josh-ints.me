server {
    server_name josh-ints.me www.josh-ints.me;
    root /var/lib/jenkins/workspace/josh-ints.me_master/src/dist;
    index index.html;
    location =/ {
        try_files $uri $uri/ /index.html;
    }
    location /summoners {
        try_files $uri $uri/ /index.html;
    }
    location /builds {
        try_files $uri $uri/ /index.html;
    }
    # Enable gzip compression.
    # Default: off
    gzip on;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about 75%
    # reduction for most ASCII files (almost identical to level 9).
    # Default: 1
    gzip_comp_level 5;

    # Don't compress anything that's already small and unlikely to shrink much if at
    # all (the default is 20 bytes, which is bad as that usually leads to larger
    # files after gzipping).
    # Default: 20
    gzip_min_length 256;

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    # Default: off
    gzip_proxied any;

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    # Default: off
    gzip_vary on;

    # Compress all output labeled with one of the following MIME-types.
    # `text/html` is always compressed by gzip module.
    # Default: text/html
    gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/vnd.ms-fontobject
    application/wasm
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/bmp
    image/svg+xml
    text/cache-manifest
    text/calendar
    text/css
    text/javascript
    text/markdown
    text/plain
    text/xml
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

    brotli_static on;
    
    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }

    # Javascript and CSS files
    location ~* \.(?:css|js)$ {
        try_files $uri =404;
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    location /api {
        include uwsgi_params;
        uwsgi_pass 127.0.0.1:3031;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/josh-ints.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/josh-ints.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    if ($host = www.josh-ints.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    if ($host = josh-ints.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
    server_name josh-ints.me www.josh-ints.me;
    return 404; # managed by Certbot
}

#dev branch
server {
    server_name dev.josh-ints.me www.dev.josh-ints.me;
    root /var/lib/jenkins/workspace/josh-ints.me_dev/src/dist;
    index index.html;
    location =/ {
        try_files $uri $uri/ /index.html;
    }
    location /summoners {
        try_files $uri $uri/ /index.html;
    }
    location /builds {
        try_files $uri $uri/ /index.html;
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }

    # Javascript and CSS files
    location ~* \.(?:css|js)$ {
        try_files $uri =404;
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    location /api {
        include uwsgi_params;
        uwsgi_pass 127.0.0.1:3031;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/josh-ints.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/josh-ints.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    if ($host = www.dev.josh-ints.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    if ($host = dev.josh-ints.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
    server_name dev.josh-ints.me www.dev.josh-ints.me;
    return 404; # managed by Certbot
}
